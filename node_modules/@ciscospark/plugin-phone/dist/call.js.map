{"version":3,"sources":["call.js"],"names":["Call","extend","namespace","children","media","session","correlationId","facingMode","type","values","locus","localMediaStream","locusJoinInFlight","default","locusLeaveInFlight","derived","id","deps","fn","url","isActive","activeParticipants","activeParticipantsCount","length","joined","joinedOnThisDevice","spark","locusUrl","device","self","devices","item","internal","mediaConnection","mediaConnections","mediaId","remoteAudioMuted","remoteVideoMuted","direction","from","memberships","find","m","isInitiator","to","local","remote","participants","filter","participant","map","personId","people","inferPersonIdFromUuid","person","state","toLowerCase","status","remoteMediaStream","receivingAudio","receivingVideo","sendingAudio","sendingVideo","acknowledge","logger","info","alert","then","_setLocus","answer","options","resolve","peer","_join","decline","reject","dial","invitee","validate","parsed","decode","split","resourceType","registered","connected","mercury","connect","catch","reason","trigger","hangup","end","when","stopListening","off","_hangup","initialize","args","prototype","listenTo","event","_onLocusEvent","error","on","process","nextTick","createOffer","_updateMedia","sdp","offerSdp","_pollForExpectedLocus","JSON","parse","remoteSdp","acceptAnswer","emit","mode","forEach","key","previousLocus","previousAttributes","sendFeedback","feedback","metrics","submit","startReceivingAudio","_changeReceivingMedia","startReceivingVideo","startSendingAudio","_changeSendingMedia","startSendingVideo","stopReceivingAudio","stopReceivingVideo","stopSendingAudio","stopSendingVideo","toggleFacingMode","constraints","audio","audioConstraint","video","videoConstraint","Error","ideal","phone","createLocalMediaStream","stream","once","exact","toggleReceivingAudio","toggleReceivingVideo","toggleSendingAudio","toggleSendingVideo","value","set","section","includes","_updateSendingMedia","leave","locusMethodName","target","defaultFacingMode","recvOnly","offerOptions","offerToReceiveAudio","offerToReceiveVideo","mediaOptions","v4","localSdp","signalingState","ended","data","eventType","_validateLocusMediaState","err","warn","get","incoming","current","action","compare","payload","updateMedia","audioMuted","videoMuted","_waitForExpectedLocus","locusAudio","audioStatus","mediaAudio","locusVideo","videoStatus","mediaVideo","listener","make","attrs"],"mappings":"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","file":"call.js","sourcesContent":["/**!\n *\n * Copyright (c) 2016-2017 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\n/* eslint-env browser: true */\n/* global RTCPeerConnection, RTCSessionDescription */\n\nimport {SparkPlugin} from '@ciscospark/spark-core';\nimport {\n  base64,\n  oneFlight,\n  retry,\n  tap,\n  whileInFlight\n} from '@ciscospark/common';\nimport {\n  USE_INCOMING,\n  FETCH\n} from '@ciscospark/internal-plugin-locus';\nimport {debounce, defaults, find, get, set} from 'lodash';\nimport {\n  getState,\n  activeParticipants,\n  direction,\n  isActive,\n  joined,\n  joinedOnThisDevice,\n  remoteAudioMuted,\n  remoteParticipant,\n  remoteVideoMuted\n} from './state-parsers';\nimport boolToStatus from './bool-to-status';\n\nimport WebRTCMedia from './web-rtc-media';\nimport uuid from 'uuid';\n\nimport {parse} from 'sdp-transform';\n\n/**\n * @event ringing\n * @instance\n * @memberof Call\n */\n\n/**\n * @event connected\n * @instance\n * @memberof Call\n */\n\n/**\n * @event disconnected\n * @instance\n * @memberof Call\n */\n\n/**\n * @event localMediaStream:change\n * @instance\n * @memberof Call\n */\n\n/**\n * @event remoteMediaStream:change\n * @instance\n * @memberof Call\n */\n\n/**\n * @event error\n * @instance\n * @memberof Call\n */\n\n/**\n * Payload for {@link Call#sendFeedback}\n * @typedef {Object} Types~Feedback\n * @property {number} userRating Number between 1 and 5 (5 being best) to let\n * the user score the call\n * @property {string} userComments Freeform feedback from the user about the\n * call\n * @property {Boolean} includeLogs set to true to submit client logs to the\n * Cisco Spark cloud. Note: at this time, all logs, not just call logs,\n * generated by the sdk will be uploaded to the Spark Cloud. Care has been taken\n * to avoid including PII in these logs, but if you've taken advantage of the\n * SDK's logger, you should make sure to avoid logging PII as well.\n */\n\n/**\n * @class\n * @extends SparkPlugin\n */\nconst Call = SparkPlugin.extend({\n  namespace: `Phone`,\n\n  children: {\n    media: WebRTCMedia\n  },\n\n  session: {\n    correlationId: `string`,\n    /**\n     * @instance\n     * @memberof Call\n     * @type {string}\n     * @readonly\n     */\n    facingMode: {\n      type: `string`,\n      values: [`user`, `environment`]\n    },\n    locus: `object`,\n    /**\n     * Returns the local MediaStream for the call. May initially be `null`\n     * between the time @{Phone#dial is invoked and the  media stream is\n     * acquired if {@link Phone#dial} is invoked without a `localMediaStream`\n     * option.\n     *\n     * This property can also be set mid-call in which case the streams sent to\n     * the remote party are replaced by this stream. On success, the\n     * {@link Call}'s {@link localMediaStream:change} event fires, notifying any\n     * listeners that we are now sending media from a new source.\n     * @instance\n     * @memberof Call\n     * @type {MediaStream}\n     */\n    localMediaStream: `object`,\n\n    locusJoinInFlight: {\n      default: false,\n      type: `boolean`\n    },\n    locusLeaveInFlight: {\n      default: false,\n      type: `boolean`\n    }\n  },\n\n  // Note, in its current form, any derived property that is an object will emit\n  // a change event everytime a locus gets replaced, even if no values change.\n  // For the moment, this is probably ok; once we have multi-party, regular\n  // change events on activeParticipants may be a problem.\n  derived: {\n    id: {\n      deps: [`locus`],\n      fn() {\n        return this.locus && this.locus.url;\n      }\n    },\n    isActive: {\n      deps: [`locus`],\n      fn() {\n        return this.locus && isActive(this.locus);\n      }\n    },\n    activeParticipants: {\n      deps: [`locus`],\n      fn() {\n        return activeParticipants(this.locus);\n      }\n    },\n    activeParticipantsCount: {\n      deps: [`activeParticipants`],\n      fn() {\n        return this.activeParticipants.length;\n      }\n    },\n    joined: {\n      deps: [`locus`],\n      default: false,\n      fn() {\n        return this.locus && joined(this.locus);\n      }\n    },\n    joinedOnThisDevice: {\n      deps: [`locus`],\n      default: false,\n      fn() {\n        return this.locus && joinedOnThisDevice(this.spark, this.locus);\n      }\n    },\n    locusUrl: {\n      deps: [`locus`],\n      fn() {\n        return this.locus.url;\n      }\n    },\n    device: {\n      deps: [`locus`],\n      fn() {\n        return this.locus.self && find(this.locus.self.devices, (item) => item.url === this.spark.internal.device.url);\n      }\n    },\n    mediaConnection: {\n      deps: [`device`],\n      fn() {\n        return this.device && this.device.mediaConnections && this.device.mediaConnections[0];\n      }\n    },\n    mediaId: {\n      deps: [`mediaConnection`],\n      fn() {\n        return this.mediaConnection && this.mediaConnection.mediaId;\n      }\n    },\n    remoteAudioMuted: {\n      deps: [`locus`],\n      fn() {\n        return remoteAudioMuted(remoteParticipant(this.locus));\n      }\n    },\n    remoteVideoMuted: {\n      deps: [`locus`],\n      fn() {\n        return remoteVideoMuted(remoteParticipant(this.locus));\n      }\n    },\n    direction: {\n      deps: [`locus`],\n      fn() {\n        // This seems brittle, but I can't come up with a better way. The only\n        // way we should have a Call without a locus is if we just initiated a\n        // call but haven't got the response from locus yet.\n        if (!this.locus) {\n          return `out`;\n        }\n        return direction(this.locus);\n      }\n    },\n    from: {\n      deps: [\n        `memberships`\n      ],\n      fn() {\n        return this.memberships.find((m) => m.isInitiator);\n      }\n    },\n    to: {\n      deps: [\n        `memberships`\n      ],\n      fn() {\n        return this.memberships.find((m) => !m.isInitiator);\n      }\n    },\n    local: {\n      deps: [`locus`],\n      fn() {\n        return this.locus && this.locus.self;\n      }\n    },\n    remote: {\n      deps: [`locus`],\n      fn() {\n        return this.locus && remoteParticipant(this.locus);\n      }\n    },\n    memberships: {\n      deps: [`locus`],\n      fn() {\n        return this.locus.participants\n          .filter((participant) => participant.type === `USER`)\n          .map((participant) => ({\n            personId: this.spark.people.inferPersonIdFromUuid(participant.person.id),\n            isInitiator: this.direction === `out` ? participant.url === this.locus.self.url : participant.url !== this.locus.self.url,\n            state: participant.state && participant.state.toLowerCase()\n          }));\n      }\n    },\n    /**\n     * <b>initiated</b> - Offer was sent to remote party but they have not yet accepted <br>\n     * <b>ringing</b> - Remote party has acknowledged the call <br>\n     * <b>connected</b> - At least one party is still on the call <br>\n     * <b>disconnected</b> - All parties have dropped <br>\n     * @instance\n     * @memberof Call\n     * @member {string}\n     * @readonly\n     */\n    status: {\n      deps: [\n        `locus`\n      ],\n      fn() {\n        return getState(this.spark, this.locus);\n      }\n    },\n    /**\n     * Access to the remote party’s `MediaStream`.\n     * @instance\n     * @memberof Call\n     * @member {MediaStream}\n     * @readonly\n     */\n    remoteMediaStream: {\n      deps: [`media.remoteMediaStream`],\n      fn() {\n        return this.media.remoteMediaStream;\n      }\n    },\n    receivingAudio: {\n      deps: [`media.receivingAudio`],\n      fn() {\n        return this.media.receivingAudio;\n      }\n    },\n    receivingVideo: {\n      deps: [`media.receivingVideo`],\n      fn() {\n        return this.media.receivingVideo;\n      }\n    },\n    sendingAudio: {\n      deps: [`media.sendingAudio`],\n      fn() {\n        return this.media.sendingAudio;\n      }\n    },\n    sendingVideo: {\n      deps: [`media.sendingVideo`],\n      fn() {\n        return this.media.sendingVideo;\n      }\n    }\n  },\n\n  @oneFlight\n  /**\n   * Use to acknowledge (without answering) an incoming call. Will cause the\n   * initiator's Call instance to emit the ringing event.\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  acknowledge() {\n    this.logger.info(`call: acknowledging`);\n    return this.spark.internal.locus.alert(this.locus)\n      .then((locus) => this._setLocus(locus))\n      .then(tap(() => this.logger.info(`call: acknowledged`)));\n  },\n\n  @oneFlight\n  @whileInFlight(`locusJoinInFlight`)\n  /**\n   * Answers an incoming call. Only applies to incoming calls. Invoking this\n   * method on an outgoing call is a noop\n   * @instance\n   * @memberof Call\n   * @param {Object} options\n   * @param {MediaStreamConstraints} options.constraints\n   * @returns {Promise}\n   */\n  answer(options) {\n    this.logger.info(`call: answering`);\n    if (!this.locus || this.direction === `out`) {\n      this.logger.info(`call: outbound call, answer() is a noop`);\n      return Promise.resolve();\n    }\n    // Locus may think we're joined on this device if we e.g. reload the page,\n    // so, we need to check if we also have a working peer connection\n    if (this.joinedOnThisDevice && this.media.peer) {\n      this.logger.info(`call: already joined on this device`);\n      return Promise.resolve();\n    }\n    return this._join(`join`, this.locus, options)\n      .then(tap(() => this.logger.info(`call: answered`)));\n  },\n\n  /**\n   * Alias of {@link Call#reject}\n   * @see {@link Call#reject}\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  decline() {\n    return this.reject();\n  },\n\n  @oneFlight\n  /**\n   * Used by {@link Phone#dial} to initiate an outbound call\n   * @instance\n   * @memberof Call\n   * @param {[type]} invitee\n   * @param {[type]} options\n   * @private\n   * @returns {[type]}\n   */\n  dial(invitee, options) {\n    this.locusJoinInFlight = true;\n    this.logger.info(`call: dialing`);\n\n    if (base64.validate(invitee)) {\n      // eslint-disable-next-line no-unused-vars\n      const parsed = base64.decode(invitee).split(`/`);\n      const resourceType = parsed[3];\n      const id = parsed[4];\n      if (resourceType === `PEOPLE`) {\n        invitee = id;\n      }\n    }\n\n    this.logger.info(this.registered, !!this.spark.internal.device.url, this.connected, this.spark.internal.mercury.connected, this.spark.internal.device.url);\n\n    // Note: mercury.connect() will call device.register() if needed. We're not\n    // using phone.register() here because it guarantees a device refresh, which\n    // is probably unnecessary.\n    this.spark.internal.mercury.connect()\n      .then(() => this._join(`create`, invitee, options))\n      .then(tap(() => this.logger.info(`call: dialed`)))\n      .catch((reason) => {\n        this.trigger(`error`, reason);\n      })\n      .then(() => {\n        this.locusJoinInFlight = false;\n      });\n\n    return this;\n  },\n\n  /**\n   * Disconnects the active call. Applies to both incoming and outgoing calls.\n   * This method may be invoked in any call state and the SDK should take care\n   * to tear down the call and free up all resources regardless of the state.\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  hangup() {\n    // Note: not a @oneFlight because this function must call itself\n    if (this.direction === `in` && !this.joinedOnThisDevice) {\n      return this.reject();\n    }\n\n    this.logger.info(`call: hanging up`);\n\n    this.media.end();\n\n    if (this.locusJoinInFlight) {\n      this.logger.info(`call: locus join in flight, waiting for rest call to complete before hanging up`);\n      return this.when(`change:locusJoinInFlight`)\n        .then(() => this.hangup());\n    }\n\n    if (!this.locus) {\n      this.stopListening(this.spark.internal.mercury);\n      this.off();\n      this.logger.info(`call: hang up complete, call never created`);\n      return Promise.resolve();\n    }\n\n    return this._hangup();\n  },\n\n  /**\n   * Initializer\n   * @instance\n   * @memberof Call\n   * @private\n   * @param {Object} attrs\n   * @param {Object} options\n   * @returns {undefined}\n   */\n  initialize(...args) {\n    Reflect.apply(SparkPlugin.prototype.initialize, this, args);\n\n    this.listenTo(this.spark.internal.mercury, `event:locus`, (event) => this._onLocusEvent(event));\n    this.listenTo(this.media, `error`, (error) => this.trigger(`error`, error));\n    this.on(`disconnected`, () => {\n      // need to do this on next tick otherwise this.off() prevents remaining\n      // events from being received (e.g. other listeners for `disconnected`\n      // won't execute)\n      process.nextTick(() => {\n        this.stopListening(this.spark.internal.mercury);\n        this.off();\n      });\n    });\n\n    this.listenTo(this.media, `negotiationneeded`, debounce(() => {\n      this.media.createOffer()\n        .then(() => this._updateMedia({\n          sdp: this.media.offerSdp,\n          mediaId: this.mediaId\n        }))\n        .then(() => this._pollForExpectedLocus())\n        .then(() => {\n          const sdp = JSON.parse(this.mediaConnection.remoteSdp).sdp;\n          return this.media.acceptAnswer(sdp);\n        })\n        .catch((reason) => this.emit(`error`, reason));\n    }));\n\n    // Reminder: this is not a derived property so that we can reassign the\n    // stream midcall\n    this.on(`change:media.localMediaStream`, () => {\n      this.localMediaStream = this.media.localMediaStream;\n    });\n\n    this.on(`change:localMediaStream`, () => {\n      if (this.media.localMediaStream !== this.localMediaStream) {\n        this.media.localMediaStream = this.localMediaStream;\n      }\n\n\n      if (this.facingMode) {\n        const mode = get(this, `media.videoConstraint.facingMode.ideal`, get(this, `media.videoConstraint.facingMode.ideal`));\n\n        if (mode === `user`) {\n          this.facingMode = `user`;\n        }\n\n        if (mode === `environment`) {\n          this.facingMode = `environment`;\n        }\n      }\n    });\n\n    [\n      `remoteMediaStream`,\n      `localMediaStream`,\n      `remoteAudioMuted`,\n      `remoteVideoMuted`\n    ].forEach((key) => {\n      this.on(`change:${key}`, () => this.trigger(`${key}:change`));\n    });\n\n    // This handler is untested because there's no way to provoke it. It's\n    // probably actually only relevant for group calls.\n    this.on(`change:isActive`, () => {\n      if (!this.isActive) {\n        if (this.joinedOnThisDevice) {\n          this.logger.info(`call: hanging up due to locus going inactive`);\n          this.hangup();\n        }\n      }\n    });\n\n    this.on(`change:activeParticipantsCount`, () => {\n      const previousLocus = this.previousAttributes().locus;\n      if (this.joinedOnThisDevice && this.activeParticipantsCount === 1 && previousLocus && activeParticipants(previousLocus).length > 1) {\n        this.logger.info(`call: hanging up due to last participant in call`);\n        this.hangup();\n      }\n    });\n\n    this.on(`change:status`, () => {\n      process.nextTick(() => this.trigger(this.status));\n    });\n  },\n\n  @oneFlight\n  /**\n   * Rejects an incoming call. Only applies to incoming calls. Invoking this\n   * method on an outgoing call is a no-op.\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  reject() {\n    if (this.direction === `out`) {\n      return Promise.resolve();\n    }\n\n    this.logger.info(`call: rejecting`);\n    /* eslint no-invalid-this: [0] */\n    return this.spark.internal.locus.decline(this.locus)\n      .then((locus) => this._setLocus(locus))\n      .then(tap(() => this.stopListening(this.spark.internal.mercury)))\n      .then(tap(() => this.off()))\n      .then(tap(() => this.logger.info(`call: rejected`)));\n  },\n\n  /**\n   * Sends feedback about the call to the Cisco Spark cloud\n   * @instance\n   * @memberof Call\n   * @param {Types~Feedback} feedback\n   * @returns {Promise}\n   */\n  sendFeedback(feedback) {\n    return this.spark.internal.metrics.submit(`meetup_call_user_rating`, feedback);\n  },\n\n  startReceivingAudio() {\n    return this._changeReceivingMedia(`offerToReceiveAudio`, true);\n  },\n\n  startReceivingVideo() {\n    return this._changeReceivingMedia(`offerToReceiveVideo`, true);\n  },\n\n  /**\n   * Starts sending audio to the Cisco Spark Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  startSendingAudio() {\n    return this._changeSendingMedia(`audio`, true);\n  },\n\n  /**\n   * Starts sending video to the Cisco Spark Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  startSendingVideo() {\n    return this._changeSendingMedia(`video`, true);\n  },\n\n  stopReceivingAudio() {\n    return this._changeReceivingMedia(`offerToReceiveAudio`, false);\n  },\n\n  stopReceivingVideo() {\n    return this._changeReceivingMedia(`offerToReceiveVideo`, false);\n  },\n\n  /**\n   * Stops sending audio to the Cisco Spark Cloud. (stops broadcast immediately,\n   * even if renegotiation has not completed)\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  stopSendingAudio() {\n    return this._changeSendingMedia(`audio`, false);\n  },\n\n  /**\n   * Stops sending video to the Cisco Spark Cloud. (stops broadcast immediately,\n   * even if renegotiation has not completed)\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  stopSendingVideo() {\n    return this._changeSendingMedia(`video`, false);\n  },\n\n  /**\n   * Replaces the current mediaStrem with one with identical constraints, except\n   * for an opposite facing mode. If the current facing mode cannot be\n   * determined, the facing mode will be set to `user`. If the call is audio\n   * only, this function will throw.\n   * @instance\n   * @memberof Call\n   * @returns {undefined}\n   */\n  toggleFacingMode() {\n    const constraints = {\n      audio: Object.assign({}, this.media.audioConstraint),\n      video: this.media.videoConstraint\n    };\n\n    if (!constraints.video) {\n      throw new Error(`Cannot toggle facignMode on audio-only call`);\n    }\n\n    if (this.facingMode !== `user` && this.facingMode !== `environment`) {\n      throw new Error(`Cannot determine current facing mode; specify a new localMediaStream to change cameras`);\n    }\n\n    if (constraints.video === true) {\n      constraints.video = {\n        facingMode: {\n          ideal: this.facingMode\n        }\n      };\n    }\n\n    if (this.facingMode === `user`) {\n      set(constraints, `video.facingMode.ideal`, `environment`);\n    }\n    else {\n      set(constraints, `video.facingMode.ideal`, `user`);\n    }\n\n    return this.spark.phone.createLocalMediaStream(constraints)\n      .then((stream) => new Promise((resolve) => {\n        this.media.once(`answeraccepted`, resolve);\n        this.localMediaStream = stream;\n      }))\n      .then(() => {\n        this.facingMode = constraints.video.facingMode.ideal || constraints.video.facingMode.exact;\n      });\n  },\n\n  /**\n   * Toggles receiving audio from the Cisco Spark Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  toggleReceivingAudio() {\n    return this.receivingAudio ? this.stopReceivingAudio() : this.startReceivingAudio();\n  },\n\n  /**\n   * Toggles receiving video from the Cisco Spark Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  toggleReceivingVideo() {\n    return this.receivingVideo ? this.stopReceivingVideo() : this.startReceivingVideo();\n  },\n\n  /**\n   * Toggles sending audio to the Cisco Spark Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  toggleSendingAudio() {\n    return this.sendingAudio ? this.stopSendingAudio() : this.startSendingAudio();\n  },\n\n  /**\n   * Toggles sending video to the Cisco Spark Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  toggleSendingVideo() {\n    return this.sendingVideo ? this.stopSendingVideo() : this.startSendingVideo();\n  },\n\n  _changeReceivingMedia(key, value) {\n    return new Promise((resolve) => {\n      this.once(`change:receiving${key === `offerToReceiveAudio` ? `Audio` : `Video`}`, () => resolve());\n      this.media.set(key, value);\n    });\n  },\n\n  _changeSendingMedia(key, value) {\n    return new Promise((resolve) => {\n      const sdp = parse(this.media.offerSdp);\n      const section = find(sdp.media, {type: key});\n      // If the current offer is going to trigger a renegotiation, then we don't\n      // need to renegotiate here.\n      if (!section || !section.direction.includes(`send`)) {\n        this.media.once(`answeraccepted`, resolve);\n      }\n      else {\n        this.once(`change:sending${key === `audio` ? `Audio` : `Video`}`, () => resolve(this._updateSendingMedia()));\n      }\n      this.media.set(key, value);\n    });\n  },\n\n  @oneFlight\n  @whileInFlight(`locusLeaveInFlight`)\n  /**\n   * Does the internal work necessary to end a call while allowing hangup() to\n   * call itself without getting stuck in promise change because of oneFlight\n   * @private\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  _hangup() {\n    return this.spark.internal.locus.leave(this.locus)\n      .then((locus) => this._setLocus(locus))\n      // Note: not stopping event-listening here; that'll happening\n      // automatically when `disconnected` fires.\n      .then(tap(() => this.logger.info(`call: hung up`)));\n  },\n\n  @oneFlight\n  // The complexity in _join is largely driven up by fairly readable `||`s\n  // eslint-disable-next-line complexity\n  _join(locusMethodName, target, options = {}) {\n\n    if (options.localMediaStream) {\n      this.media.set(`localMediaStream`, options.localMediaStream);\n    }\n    else {\n      if (!options.constraints) {\n        options.constraints = {\n          audio: true,\n          video: {\n            facingMode: {\n              ideal: this.spark.phone.defaultFacingMode\n            }\n          }\n        };\n      }\n      const mode = get(options, `constraints.video.facingMode.ideal`, get(options, `constraints.video.facingMode.exact`));\n      if (mode === `user` || mode === `environment`) {\n        this.facingMode = mode;\n      }\n\n      const recvOnly = !options.constraints.audio && !options.constraints.video;\n      options.offerOptions = defaults(options.offerOptions, {\n        offerToReceiveAudio: recvOnly || !!options.constraints.audio,\n        offerToReceiveVideo: recvOnly || !!options.constraints.video\n      });\n    }\n\n    const mediaOptions = {};\n    if (options.constraints) {\n      mediaOptions.audio = options.constraints.audio;\n      mediaOptions.video = options.constraints.video;\n    }\n\n    if (options.offerOptions) {\n      mediaOptions.offerToReceiveAudio = options.offerOptions.offerToReceiveAudio;\n      mediaOptions.offerToReceiveVideo = options.offerOptions.offerToReceiveVideo;\n    }\n\n    if (mediaOptions.offerOptions || options.constraints) {\n      this.media.set(mediaOptions);\n    }\n\n    if (!target.correlationId) {\n      this.correlationId = options.correlationId = uuid.v4();\n    }\n\n    if (!this.correlationId) {\n      this.correlationId = target.correlationId;\n    }\n\n    return this.media.createOffer()\n      .then(() => this.spark.internal.locus[locusMethodName](target, {\n        localSdp: this.media.offerSdp,\n        correlationId: this.correlationId\n      }))\n      .then((locus) => {\n        this._setLocus(locus);\n        const answer = JSON.parse(this.mediaConnection.remoteSdp).sdp;\n        this.logger.info(`accepting offer`);\n        this.logger.info(`peer state`, this.media.peer && this.media.peer.signalingState);\n        if (!this.media.ended) {\n          return this.media.acceptAnswer(answer)\n            .then(() => this.logger.info(`offer accepted`));\n        }\n        this.logger.info(`call: already ended, not accepting answer`);\n        return Promise.resolve();\n      });\n  },\n\n  /**\n   * Handles an incoming mercury event if relevant to this call.\n   * @instance\n   * @memberof Call\n   * @param {Types~MercuryEvent} event\n   * @private\n   * @returns {undefined}\n   */\n  _onLocusEvent(event) {\n    const device = find(event.data.locus.self.devices, (item) => item.url === this.spark.internal.device.url);\n    if (this.locus && event.data.locus.url === this.locus.url || this.correlationId && this.correlationId === device.correlationId) {\n      this.logger.info(`locus event: ${event.data.eventType}`);\n      this._setLocus(event.data.locus);\n    }\n  },\n\n  @retry\n  /**\n   * The response to a PUT to LOCUS/media may not be fully up-to-date when we\n   * receive it. This method polls locus until we get a locus with the status\n   * properties we expect (or three errors occur)\n   * @instance\n   * @memberof Call\n   * @private\n   * @returns {Promise<Types~Locus>}\n   */\n  _pollForExpectedLocus() {\n    return new Promise((resolve) => {\n      try {\n        this._validateLocusMediaState(this.locus);\n        resolve();\n      }\n      catch (err) {\n        this.logger.warn(`locus: received locus does not contain expected state; fetching again`);\n        resolve(this.spark.internal.locus.get(this.locus)\n          .then((locus) => this._setLocus(locus))\n          .then(() => this._validateLocusMediaState(this.locus)));\n      }\n    });\n  },\n\n  /**\n   * Assigns a new locus to this.locus according to locus sequencing rules\n   * @instance\n   * @memberof Call\n   * @param {Types~Locus} incoming\n   * @private\n   * @returns {Promise}\n   */\n  _setLocus(incoming) {\n    const current = this.locus;\n    if (!current) {\n      this.locus = incoming;\n      return Promise.resolve();\n    }\n    const action = this.spark.internal.locus.compare(current, incoming);\n\n    switch (action) {\n    case USE_INCOMING:\n      this.locus = incoming;\n      // certain reasons for setting a locus (such as from calling\n      // acknowledge())\n      if (this.device) {\n        this.correlationId = this.device.correlationId;\n      }\n      break;\n    case FETCH:\n      return this.spark.internal.locus.get(current)\n         .then((locus) => this._setLocus(locus));\n    default:\n      // do nothing\n    }\n\n    return Promise.resolve();\n  },\n\n  /**\n   * Changes the status of media\n   * @instance\n   * @memberof Call\n   * @param {Object} payload\n   * @private\n   * @returns {Promise}\n   */\n  _updateMedia(payload) {\n    if (payload.sdp && !payload.sdp.includes(`b=`)) {\n      throw new Error(`outbound sdp should always have a 'b=' line`);\n    }\n    return this.spark.internal.locus.updateMedia(this.locus, payload)\n      .then((locus) => this._setLocus(locus));\n  },\n\n  @oneFlight\n  /**\n   * Changes the status of outbound media\n   * @instance\n   * @memberof Call\n   * @private\n   * @returns {Promise}\n   */\n  _updateSendingMedia() {\n    return this._updateMedia({\n      sdp: this.media.offerSdp,\n      mediaId: this.mediaId,\n      audioMuted: !this.sendingAudio,\n      videoMuted: !this.sendingVideo\n    })\n      .then(() => this._waitForExpectedLocus());\n  },\n\n  /**\n   * Checks that this.locus has the expected state\n   * @instance\n   * @memberof Call\n   * @param {Types~Locus} locus\n   * @private\n   * @returns {Promise}\n   */\n  _validateLocusMediaState(locus) {\n    const locusAudio = locus.self.status.audioStatus.toLowerCase();\n    const mediaAudio = boolToStatus(this.media.audio, this.media.offerToReceiveAudio);\n    if (locusAudio !== mediaAudio) {\n      this.logger.warn(`locus: expected audio ${locusAudio} (locus) to equal ${mediaAudio} (local media)`);\n      throw new Error(`locus.self.status.audioStatus indicates the received DTO is out of date`);\n    }\n\n    const locusVideo = locus.self.status.videoStatus.toLowerCase();\n    const mediaVideo = boolToStatus(this.media.video, this.media.offerToReceiveVideo);\n    if (locusVideo !== mediaVideo) {\n      this.logger.warn(`locus: expected video ${locusVideo} (locus) to equal ${mediaVideo} (local media)`);\n      throw new Error(`locus.self.status.videoStatus indicates the received DTO is out of date`);\n    }\n\n    return locus;\n  },\n\n  /**\n   * Waits until this.locus describes the expected state\n   * @instance\n   * @memberof Call\n   * @private\n   * @returns {Promise}\n   */\n  _waitForExpectedLocus() {\n    return new Promise((resolve) => {\n      const listener = () => {\n        try {\n          this._validateLocusMediaState(this.locus);\n          this.off(`change:locus`, listener);\n          resolve();\n        }\n        catch (err) {\n          this.logger.warn(`locus: current locus not in expected state; waiting for next locus`);\n        }\n      };\n      this.on(`change:locus`, listener);\n      listener();\n    });\n  }\n});\n\nCall.make = function make(attrs, options) {\n  return new Call(attrs, options);\n};\n\nexport default Call;\n"]}