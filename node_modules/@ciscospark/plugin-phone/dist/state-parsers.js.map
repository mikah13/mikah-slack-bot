{"version":3,"sources":["state-parsers.js"],"names":["activeParticipants","direction","isActive","isCall","joined","joinedOnThisDevice","mediaDirection","participantIsJoined","remoteParticipant","remoteParticipants","remoteAudioMuted","remoteVideoMuted","shouldRing","getState","locus","participants","state","self","isCreator","fullState","filter","participant","type","length","Boolean","spark","internal","device","url","deviceUrl","mediaType","status","toLowerCase","audioStatus","includes","videoStatus","event","data","remote","local"],"mappings":"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","file":"state-parsers.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\nimport {filter, get} from 'lodash';\n\n/**\n * Finds the Locus's active participants\n * @param {Types~Locus} locus\n * @private\n * @returns {Array<Types~LocusParticipant>}\n */\nexport function activeParticipants(locus) {\n  return filter(locus.participants, {state: `JOINED`});\n}\n\n/**\n * Indicates if the locus was activated form this device\n * @param {Types~Locus} locus\n * @private\n * @returns {string} unknown|in|out\n */\nexport function direction(locus) {\n  if (!locus || !locus.self) {\n    return `unknown`;\n  }\n  return locus.self.isCreator ? `out` : `in`;\n}\n\n/**\n * Indicates of the specified locus is active\n * @param {Types~Locus} locus\n * @private\n * @returns {Boolean}\n */\nexport function isActive(locus) {\n  return locus.fullState.state === `ACTIVE`;\n}\n\n/**\n * Indicates if the specified locus represents a call (in other words, has\n * exactly two participants)\n * @param {Types~Locus} locus\n * @private\n * @returns {Boolean}\n */\nexport function isCall(locus) {\n  return locus.participants.filter((participant) => participant.type === `USER`).length === 2;\n}\n\n/**\n * Indicates if the current user has joined the Locus\n * @param {Types~Locus} locus\n * @private\n * @returns {Boolean}\n */\nexport function joined(locus) {\n  return Boolean(locus.self && participantIsJoined(locus.self));\n}\n\n/**\n * Indicates if this device has joined the locus\n * @param {ProxySpark} spark\n * @param {Types~Locus} locus\n * @private\n * @returns {Boolean}\n */\nexport function joinedOnThisDevice(spark, locus) {\n  return joined(locus) && spark.internal.device.url === locus.self.deviceUrl;\n}\n\n/**\n * Indicates the direction of the specified media type for the specified\n * participant\n * @param {string} mediaType\n * @param {Types~LocusParticipant} participant\n * @private\n * @returns {string} One of `sendonly`, `recvonly`, `sendrecv`, or `inactive`\n */\nexport function mediaDirection(mediaType, participant) {\n  if (!participant) {\n    return `inactive`;\n  }\n\n  if (!participant.status) {\n    return `inactive`;\n  }\n\n  return (participant.status[`${mediaType}Status`] || `inactive`).toLowerCase();\n}\n\n/**\n * Indicates if the specified participant has joined the Locus\n * @param {Types~LocusParticipant} participant\n * @private\n * @returns {Boolean}\n */\nexport function participantIsJoined(participant) {\n  return participant && participant.state === `JOINED`;\n}\n\n/**\n * Finds the party in the call that is not the current user\n * @param {Types~Locus} locus\n * @private\n * @returns {Types~LocusParticipant}\n */\nexport function remoteParticipant(locus) {\n  return remoteParticipants(locus)[0];\n}\n\n/**\n * Finds all participants of the Locus that are not the current user\n * @param {Types~Locus} locus\n * @private\n * @returns {Types~LocusParticipant}\n */\nexport function remoteParticipants(locus) {\n  return locus.participants.filter((participant) => participant.type === `USER` && participant.url !== locus.self.url);\n}\n\n/**\n * Indicates if the remote party is sending audio\n * @param {Types~LocusParticipant} participant\n * @private\n * @returns {Boolean}\n */\nexport function remoteAudioMuted(participant) {\n  return participantIsJoined(participant) && !participant.status.audioStatus.includes(`SEND`);\n}\n\n/**\n * Indicates if the remote party is sending video\n * @param {Types~LocusParticipant} participant\n * @private\n * @returns {Boolean}\n */\nexport function remoteVideoMuted(participant) {\n  return participantIsJoined(participant) && !participant.status.videoStatus.includes(`SEND`);\n}\n\n/**\n * Indicates if the `call:incoming` event should be fired for the specified Locus\n * @param {Types~MercuryEvent} event Event which delivered the Locus\n * @param {ProxySpark} spark\n * @private\n * @returns {Boolean}\n */\nexport function shouldRing(event) {\n  return get(event, `data.locus.self.alertType.action`) === `FULL` && isCall(event.data.locus);\n}\n\n// there's really no good way to split getState() up that won't make it less readable\n/* eslint-disable complexity */\n/**\n * Determines the call state from a locus object. avoids the caching caused by\n * amp state because that leads to out-of-order updates\n * @param {ProxySpark} spark\n * @param {Types~Locus} locus\n * @private\n * @returns {string}\n */\nexport function getState(spark, locus) {\n  if (locus) {\n    const remote = remoteParticipant(locus);\n    if (remote) {\n      if (joinedOnThisDevice(spark, locus) && remote && participantIsJoined(remote)) {\n        return `connected`;\n      }\n\n      const local = locus.self;\n      if (remote.state === `LEFT` || local.state === `LEFT`) {\n        return `disconnected`;\n      }\n\n      if (remote.state === `DECLINED`) {\n        return `disconnected`;\n      }\n\n      if (remote.state === `NOTIFIED`) {\n        return `ringing`;\n      }\n    }\n  }\n  return `initiated`;\n}\n"]}