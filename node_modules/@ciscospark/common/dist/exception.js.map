{"version":3,"sources":["exception.js"],"names":["Exception","args","message","parse","constructor","defaultMessage","name","Error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAMA;;;IAGqBA,S;;;AAGnB;;;;;AAKA,uBAAqB;AAAA;;AAAA;;AAAA,sCAANC,IAAM;AAANA,UAAM;AAAA;;AAAA,uKACVA,IADU;;AAGnB,QAAIC,gBAAJ;AACA,QAAI,MAAKC,KAAT,EAAgB;AACdD,gBAAU,MAAKC,KAAL,cAAcF,IAAd,CAAV;AACD;AACD,QAAI,CAACC,OAAL,EAAc;AACZA,gBAAU,MAAKE,WAAL,CAAiBC,cAA3B;AACD;;AAED,UAAKC,IAAL,GAAY,MAAKF,WAAL,CAAiBE,IAA7B;;AAEA,UAAKJ,OAAL,GAAeA,OAAf;AAbmB;AAcpB;;AAED;;;;;;;;;;4BAMsB;AACpB;AACD;;;qBAhCoCK,K,WAC9BF,c;kBADYL,S","file":"exception.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.\n * @ignore\n */\n\n/**\n * Base Exception class\n */\nexport default class Exception extends Error {\n  static defaultMessage = `An error occurred`;\n\n  /**\n   * constructor\n   * @param {mixed} args\n   * @returns {Exception}\n   */\n  constructor(...args) {\n    super(...args);\n\n    let message;\n    if (this.parse) {\n      message = this.parse(...args);\n    }\n    if (!message) {\n      message = this.constructor.defaultMessage;\n    }\n\n    this.name = this.constructor.name;\n\n    this.message = message;\n  }\n\n  /**\n   * Generates the value assigned to `this.message`. You'll probably want to\n   * override this in your custom Exception\n   * @param {mixed} args\n   * @returns {string}\n   */\n  static parse(...args) {\n    return args[0];\n  }\n}\n"]}